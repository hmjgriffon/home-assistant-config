automation:
  - alias: Zwave - Low battery
    initial_state: True
    trigger:
      - platform: template
        value_template: >
          {% for zwave in states.zwave if zwave.attributes.battery_level %}
            {%- if zwave.attributes.battery_level | int < 20 -%}
              {{ true }}
            {%- endif -%}
          {%- endfor -%}
    action:
      - service: notify.jeffs_phone
        data_template:
          message: "{{ trigger.to_state.attributes.friendly_name }} needs new batteries."

  - alias: Zwave - Dead sensor
    initial_state: True
    trigger:
      - platform: state
        entity_id:
          - zwave.front_landscape
          - zwave.back_landscape
          - zwave.fountain
          - zwave.doorbell
        to: "dead"
    action:
      # try to heal the node
      - service: zwave.heal_node
        data_template:
          node_id: "{{ states[trigger.to_state.domain][trigger.to_state.object_id].attributes.node_id }}"
      # wait to make sure it updates
      - delay: "00:00:60"
      # now check it again
      - condition: template
        value_template: "{{ states[trigger.to_state.domain][trigger.to_state.object_id].state == 'dead' }}"
      # notify if still dead
      - service: notify.jeffs_phone
        data_template:
          message: "A zwave node is marked as dead and I could not fix it: {{ trigger.entity_id }}."