group:
  batteries:
    name: Batteries
    entities:
      - sensor.garage_jeff_battery
      - sensor.garage_jillian_battery
      - sensor.garage_guest_battery
      - sensor.doorbell_battery


homeassistant:
  customize:
    sensor.garage_guest_battery:
      friendly_name: Guest Garage Door
      icon: mdi:battery
    sensor.garage_jeff_battery:
      friendly_name: Jeff's Garage Door
      icon: mdi:battery
    sensor.garage_jillian_battery:
      friendly_name: Jillian's Garage Door
      icon: mdi:battery
    sensor.doorbell_battery:
      friendly_name: Doorbell
      icon: mdi:battery


sensor:
  - platform: template
    sensors:
      garage_guest_battery:
        value_template: "{% if states.zwave.guest_garage_door %}
          {{ states.zwave.guest_garage_door.attributes.battery_level }}
        {% endif %}"
        unit_of_measurement: "%"

      garage_jillian_battery:
        value_template: "{% if states.zwave.jillians_garage_door %}
          {{ states.zwave.jillians_garage_door.attributes.battery_level }}
        {% endif %}"
        unit_of_measurement: "%"

      garage_jeff_battery:
        value_template: "{% if states.zwave.jeffs_garage_door %}
          {{ states.zwave.jeffs_garage_door.attributes.battery_level }}
        {% endif %}"
        unit_of_measurement: "%"

      doorbell_battery:
        value_template: "{% if states.zwave.doorbell %}
          {{ states.zwave.doorbell.attributes.battery_level }}
        {% endif %}"
        unit_of_measurement: "%"


automation:
  - alias: zwave - Dead sensors
    initial_state: True
    trigger:
      - platform: state
        entity_id:
          - zwave.front_landscape
          - zwave.back_landscape
          - zwave.fountain
          - zwave.doorbell
        to: "dead"
    action:
      # try to heal the node
      - service: zwave.heal_node
        data_template:
          node_id: "{{ states[trigger.to_state.domain][trigger.to_state.object_id].attributes.node_id }}"
      # wait to make sure it updates
      - delay: "00:00:60"
      # now check it again
      - condition: template
        value_template: "{{ states[trigger.to_state.domain][trigger.to_state.object_id].state == 'dead' }}"
      # notify if still dead
      - service: notify.jeffs_phone
        data_template:
          message: "A zwave node is marked as dead and I could not fix it: {{ trigger.entity_id }}."